
.. module:: hotel
    :synopsis: Hotel Management 
    :noindex:
.. 

.. raw:: html

      <br />
    <link rel="stylesheet" href="../_static/hide_objects_in_sidebar.css" type="text/css" />

.. tip:: This module is part of the OpenERP software, the leading Open Source 
  enterprise management system. If you want to discover OpenERP, check our 
  `screencasts <http://openerp.tv>`_ or download 
  `OpenERP <http://openerp.com>`_ directly.

.. raw:: html

    <div class="js-kit-rating" title="" permalink="" standalone="yes" path="/hotel"></div>
    <script src="http://js-kit.com/ratings.js"></script>

Hotel Management (*hotel*)
==========================
:Module: hotel
:Name: Hotel Management
:Version: 5.0.1.0
:Author: Tiny
:Directory: hotel
:Web: 
:Official module: no
:Quality certified: no

Description
-----------

::

  Module for Hotel/Resort/Property management. You can manage:
      * Configure Property
      * Hotel Configuration
      * Check In, Check out
      * Manage Folio
      * Payment
  
      Different reports are also provided, mainly for hotel statistics.

Download links
--------------

You can download this module as a zip file in the following version:

  * `5.0 <http://www.openerp.com/download/modules/5.0/hotel.zip>`_
  * `trunk <http://www.openerp.com/download/modules/trunk/hotel.zip>`_


Dependencies
------------

 * :mod:`base`
 * :mod:`product`
 * :mod:`sale`

Reports
-------

 * Folio Total

Menus
-------

 * Hotel Management
 * Hotel Management/Configuration
 * Hotel Management/Reports
 * Hotel Management/Configuration/Floor
 * Hotel Management/Configuration/Amenity Types
 * Hotel Management/Configuration/Amenity Types/Amenities
 * Hotel Management/Configuration/Room Types
 * Hotel Management/Configuration/Room Types/Rooms
 * Hotel Management/Configuration/Service Types
 * Hotel Management/Configuration/Service Types/Services
 * Hotel Management/All Folio
 * Hotel Management/All Folio/Generate Folio
 * Hotel Management/Configuration/Room Types/Room by Category
 * Hotel Management/Configuration/Amenity Types/Amenities by Category
 * Hotel Management/Configuration/Service Types/Services by Category
 * Hotel Management/Reports/Hotel Folio Report

Views
-----

 * hotel.floor.form (form)
 * hotel.floor.tree (tree)
 * hotel.room_amenities_type_form (form)
 * hotel.room_amenities_type_list (tree)
 * hotel.room_amenities_form (form)
 * hotel.room_amenities_list (tree)
 * hotel.room_type.form (form)
 * hotel.room_type.tree (tree)
 * hotel.room.form (form)
 * hotel.room.tree (tree)
 * hotel.service_type.form (form)
 * hotel.service_type.tree (tree)
 * .hotel.services.form (form)
 * hotel.services.tree (tree)
 * hotel.folio.form (form)
 * hotel.folio.tree (tree)


Objects
-------

Object: Floor (hotel.floor)
###########################



:name: Floor Name, char, required





:sequence: Sequence, integer




Object: Room Type (hotel.room_type)
###################################



:property_account_expense_categ: Expense Account, many2one

    *This account will be used to value outgoing stock for the current product category*



:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*



:isroomtype: Is Room Type, boolean





:name: Name, char, required





:sequence: Sequence, integer





:cat_id: category, many2one, required





:isservicetype: Is Service Type, boolean





:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*



:parent_id: Parent Category, many2one





:complete_name: Name, char, readonly





:property_account_income_categ: Income Account, many2one

    *This account will be used to value incoming stock for the current product category*



:child_id: Child Categories, one2many





:isamenitype: Is amenities Type, boolean





:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*


Object: amenities Type (hotel.room_amenities_type)
##################################################



:property_account_expense_categ: Expense Account, many2one

    *This account will be used to value outgoing stock for the current product category*



:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*



:isroomtype: Is Room Type, boolean





:name: Name, char, required





:sequence: Sequence, integer





:cat_id: category, many2one, required





:isservicetype: Is Service Type, boolean





:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*



:parent_id: Parent Category, many2one





:complete_name: Name, char, readonly





:property_account_income_categ: Income Account, many2one

    *This account will be used to value incoming stock for the current product category*



:child_id: Child Categories, one2many





:isamenitype: Is amenities Type, boolean





:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*


Object: Room amenities (hotel.room_amenities)
#############################################



:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:ean13: EAN13, char





:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valuation. It can serves as a base price for supplier price.*



:mes_type: Measure Type, selection, required





:code: Code, char, readonly





:property_account_income: Income Account, many2one

    *This account will be used instead of the default one to value incoming stock for the current product*



:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uos = uom * coeff*



:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:product_manager: Product Manager, many2one





:company_id: Company, many2one





:loc_rack: Rack, char





:pricelist_sale: Sale Pricelists, text, readonly





:type: Product Type, selection, required

    *Will change the way procurements are processed. Consumables are stockable products with infinite stock, or for use when you have no stock management in the system.*



:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:track_incoming: Track Incoming Lots, boolean

    *Force to use a Production Lot during receptions*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:volume: Volume, float

    *The volume in m3.*



:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*



:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until re-supplying. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:variants: Variants, char





:partner_ref: Customer ref, char, readonly





:rental: Rentable Product, boolean





:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*



:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finished products. It's the time you promise to your customers.*



:pricelist_purchase: Purchase Pricelists, text, readonly





:name: Name, char, required





:description_sale: Sale Description, text





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:seller_ids: Partners, one2many





:amenity_rate: Amenity Rate, integer





:isroom: Is Room, boolean





:isservice: Is Service id, boolean





:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*



:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:weight: Gross weight, float

    *The gross weight in Kg.*



:price_extra: Variant Price Extra, float





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:description_purchase: Purchase Description, text





:default_code: Code, char





:iscategid: Is categ id, boolean





:virtual_available: Virtual Stock, float, readonly

    *Future stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*



:track_outgoing: Track Outgoing Lots, boolean

    *Force to use a Production Lot during deliveries*



:product_tmpl_id: Product Template, many2one, required





:state: Status, selection

    *Tells the user if he can use the product or not.*



:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must be in the same category as the default unit of measure.*



:weight_net: Net weight, float

    *The net weight in Kg.*



:description: Description, text





:price: Customer Price, float, readonly





:rcateg_id: Amenity Category, many2one





:room_categ_id: Product Category, many2one, required





:active: Active, boolean





:loc_row: Row, char





:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:loc_case: Case, char





:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:property_account_expense: Expense Account, many2one

    *This account will be used instead of the default one to value outgoing stock for the current product*



:categ_id: Category, many2one, required





:lst_price: List Price, float, readonly





:taxes_id: Customer Taxes, many2many





:price_margin: Variant Price Margin, float




Object: Hotel Room (hotel.room)
###############################



:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:ean13: EAN13, char





:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valuation. It can serves as a base price for supplier price.*



:mes_type: Measure Type, selection, required





:code: Code, char, readonly





:room_amenities: Room Amenities, many2many





:property_account_income: Income Account, many2one

    *This account will be used instead of the default one to value incoming stock for the current product*



:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:maxAdult: Max Adult, integer





:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uos = uom * coeff*



:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:product_manager: Product Manager, many2one





:company_id: Company, many2one





:loc_rack: Rack, char





:pricelist_sale: Sale Pricelists, text, readonly





:type: Product Type, selection, required

    *Will change the way procurements are processed. Consumables are stockable products with infinite stock, or for use when you have no stock management in the system.*



:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:track_incoming: Track Incoming Lots, boolean

    *Force to use a Production Lot during receptions*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:volume: Volume, float

    *The volume in m3.*



:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*



:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until re-supplying. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:variants: Variants, char





:partner_ref: Customer ref, char, readonly





:rental: Rentable Product, boolean





:product_id: Product_id, many2one





:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*



:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finished products. It's the time you promise to your customers.*



:pricelist_purchase: Purchase Pricelists, text, readonly





:name: Name, char, required





:description_sale: Sale Description, text





:floor_id: Floor No, many2one





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:seller_ids: Partners, one2many





:isroom: Is Room, boolean





:isservice: Is Service id, boolean





:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*



:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:weight: Gross weight, float

    *The gross weight in Kg.*



:maxChild: Max Child, integer





:price_extra: Variant Price Extra, float





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:description_purchase: Purchase Description, text





:default_code: Code, char





:iscategid: Is categ id, boolean





:virtual_available: Virtual Stock, float, readonly

    *Future stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*



:track_outgoing: Track Outgoing Lots, boolean

    *Force to use a Production Lot during deliveries*



:product_tmpl_id: Product Template, many2one, required





:state: Status, selection

    *Tells the user if he can use the product or not.*



:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must be in the same category as the default unit of measure.*



:weight_net: Net weight, float

    *The net weight in Kg.*



:description: Description, text





:price: Customer Price, float, readonly





:active: Active, boolean





:loc_row: Row, char





:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:loc_case: Case, char





:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:property_account_expense: Expense Account, many2one

    *This account will be used instead of the default one to value outgoing stock for the current product*



:categ_id: Category, many2one, required





:lst_price: List Price, float, readonly





:taxes_id: Customer Taxes, many2many





:avail_status: Room Status, selection





:price_margin: Variant Price Margin, float




Object: hotel folio new (hotel.folio)
#####################################



:origin: Origin, char





:incoterm: Incoterm, selection





:checkin_date: Check In, datetime, required, readonly





:order_line: Order Lines, one2many, readonly





:picking_policy: Packing Policy, selection, required

    *If you don't have enough stock available to deliver all at once, do you accept partial shipments or not?*



:order_policy: Shipping Policy, selection, required, readonly

    *The Shipping Policy is used to synchronise invoice and delivery operations.
    - The 'Pay before delivery' choice will first generate the invoice and then generate the packing order after the payment of this invoice.
    - The 'Shipping & Manual Invoice' will create the packing order directly and wait for the user to manually click on the 'Invoice' button to generate the draft invoice.
    - The 'Invoice on Order After Delivery' choice will generate the draft invoice based on sale order after all packing lists have been finished.
    - The 'Invoice from the packing' choice is used to create an invoice during the packing process.*



:checkout_date: Check Out, datetime, required, readonly





:partner_order_id: Ordering Contact, many2one, required, readonly

    *The name and address of the contact that requested the order or quotation.*



:picked_rate: Picked, float, readonly





:invoice_ids: Invoices, many2many

    *This is the list of invoices that have been generated for this sale order. The same sale order may have been invoiced in several times (by line for example).*



:shop_id: Shop, many2one, required, readonly





:client_order_ref: Customer Ref, char





:partner_invoice_id: Invoice Address, many2one, required, readonly





:user_id: Salesman, many2one





:date_order: Date Ordered, date, required, readonly





:partner_id: Customer, many2one, required, readonly





:picking_ids: Related Packing, one2many, readonly

    *This is the list of picking list that have been generated for this invoice*



:invoiced: Paid, boolean, readonly





:note: Notes, text





:fiscal_position: Fiscal Position, many2one





:amount_untaxed: Untaxed Amount, float, readonly





:name: Order Reference, char, required





:partner_shipping_id: Shipping Address, many2one, required, readonly





:payment_term: Payment Term, many2one





:shipped: Picked, boolean, readonly





:amount_tax: Taxes, float, readonly





:order_id: order_id, many2one, required





:state: Order State, selection, readonly

    *Gives the state of the quotation or sale order. The exception state is automatically set when a cancel operation occurs in the invoice validation (Invoice Exception) or in the packing list process (Shipping Exception). The 'Waiting Schedule' state is set when the invoice is confirmed but waiting for the scheduler to run on the date 'Date Ordered'.*



:invoice_quantity: Invoice on, selection, required

    *The sale order will automatically create the invoice proposition (draft invoice). Ordered and delivered quantities may not be the same. You have to choose if you invoice based on ordered or shipped quantities. If the product is a service, shipped quantities means hours spent on the associated tasks.*



:invoiced_rate: Invoiced, float, readonly





:service_lines: unknown, one2many





:pricelist_id: Pricelist, many2one, required, readonly





:amount_total: Total, float, readonly





:project_id: Analytic Account, many2one, readonly





:room_lines: unknown, one2many




Object: hotel folio1 room line (hotel_folio.line)
#################################################



:property_ids: Properties, many2many, readonly





:product_uos_qty: Quantity (UoS), float, readonly





:procurement_id: Procurement, many2one





:checkin_date: Check In, datetime, required





:product_uom: Product UoM, many2one, required, readonly





:sequence: Sequence, integer





:order_id: Order Ref, many2one, required, readonly





:price_unit: Unit Price, float, required, readonly





:product_uom_qty: Quantity (UoM), float, required, readonly





:price_subtotal: Subtotal, float, readonly





:discount: Discount (%), float, readonly





:product_uos: Product UoS, many2one





:price_net: Net Price, float, readonly





:number_packages: Number Packages, integer, readonly





:invoiced: Invoiced, boolean, readonly





:delay: Delivery Lead Time, float, required, readonly

    *Number of days between the order confirmation and the shipping of the products to the customer*



:product_id: Product, many2one





:invoice_lines: Invoice Lines, many2many, readonly





:folio_id: folio_id, many2one





:notes: Notes, text





:name: Description, char, required, readonly





:move_ids: Inventory Moves, one2many, readonly





:state: Status, selection, required, readonly





:order_partner_id: Customer, many2one





:th_weight: Weight, float, readonly





:product_packaging: Packaging, many2one





:checkout_date: Check Out, datetime, required





:tax_id: Taxes, many2many, readonly





:type: Procure Method, selection, required, readonly





:order_line_id: order_line_id, many2one, required





:address_allotment_id: Allotment Partner, many2one




Object: hotel Service line (hotel_service.line)
###############################################



:property_ids: Properties, many2many, readonly





:product_uos_qty: Quantity (UoS), float, readonly





:procurement_id: Procurement, many2one





:product_uom: Product UoM, many2one, required, readonly





:sequence: Sequence, integer





:order_id: Order Ref, many2one, required, readonly





:price_unit: Unit Price, float, required, readonly





:product_uom_qty: Quantity (UoM), float, required, readonly





:price_subtotal: Subtotal, float, readonly





:service_line_id: service_line_id, many2one, required





:discount: Discount (%), float, readonly





:product_uos: Product UoS, many2one





:price_net: Net Price, float, readonly





:number_packages: Number Packages, integer, readonly





:invoiced: Invoiced, boolean, readonly





:delay: Delivery Lead Time, float, required, readonly

    *Number of days between the order confirmation and the shipping of the products to the customer*



:product_id: Product, many2one





:invoice_lines: Invoice Lines, many2many, readonly





:folio_id: folio_id, many2one





:notes: Notes, text





:name: Description, char, required, readonly





:move_ids: Inventory Moves, one2many, readonly





:state: Status, selection, required, readonly





:order_partner_id: Customer, many2one





:th_weight: Weight, float, readonly





:product_packaging: Packaging, many2one





:tax_id: Taxes, many2many, readonly





:type: Procure Method, selection, required, readonly





:address_allotment_id: Allotment Partner, many2one




Object: Service Type (hotel.service_type)
#########################################



:property_account_expense_categ: Expense Account, many2one

    *This account will be used to value outgoing stock for the current product category*



:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*



:isroomtype: Is Room Type, boolean





:name: Name, char, required





:sequence: Sequence, integer





:ser_id: category, many2one, required





:isservicetype: Is Service Type, boolean





:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*



:parent_id: Parent Category, many2one





:complete_name: Name, char, readonly





:property_account_income_categ: Income Account, many2one

    *This account will be used to value incoming stock for the current product category*



:child_id: Child Categories, one2many





:isamenitype: Is amenities Type, boolean





:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*


Object: Hotel Services and its charges (hotel.services)
#######################################################



:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:ean13: EAN13, char





:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valuation. It can serves as a base price for supplier price.*



:mes_type: Measure Type, selection, required





:code: Code, char, readonly





:property_account_income: Income Account, many2one

    *This account will be used instead of the default one to value incoming stock for the current product*



:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uos = uom * coeff*



:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:product_manager: Product Manager, many2one





:company_id: Company, many2one





:loc_rack: Rack, char





:pricelist_sale: Sale Pricelists, text, readonly





:type: Product Type, selection, required

    *Will change the way procurements are processed. Consumables are stockable products with infinite stock, or for use when you have no stock management in the system.*



:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:track_incoming: Track Incoming Lots, boolean

    *Force to use a Production Lot during receptions*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:volume: Volume, float

    *The volume in m3.*



:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*



:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until re-supplying. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:variants: Variants, char





:partner_ref: Customer ref, char, readonly





:rental: Rentable Product, boolean





:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*



:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finished products. It's the time you promise to your customers.*



:pricelist_purchase: Purchase Pricelists, text, readonly





:name: Name, char, required





:description_sale: Sale Description, text





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:seller_ids: Partners, one2many





:service_id: Service_id, many2one





:isroom: Is Room, boolean





:isservice: Is Service id, boolean





:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*



:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:weight: Gross weight, float

    *The gross weight in Kg.*



:price_extra: Variant Price Extra, float





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:description_purchase: Purchase Description, text





:default_code: Code, char





:iscategid: Is categ id, boolean





:virtual_available: Virtual Stock, float, readonly

    *Future stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*



:track_outgoing: Track Outgoing Lots, boolean

    *Force to use a Production Lot during deliveries*



:product_tmpl_id: Product Template, many2one, required





:state: Status, selection

    *Tells the user if he can use the product or not.*



:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must be in the same category as the default unit of measure.*



:weight_net: Net weight, float

    *The net weight in Kg.*



:description: Description, text





:price: Customer Price, float, readonly





:active: Active, boolean





:loc_row: Row, char





:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:loc_case: Case, char





:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:property_account_expense: Expense Account, many2one

    *This account will be used instead of the default one to value outgoing stock for the current product*



:categ_id: Category, many2one, required





:lst_price: List Price, float, readonly





:taxes_id: Customer Taxes, many2many





:price_margin: Variant Price Margin, float


